%base-list {
    list-style: none;
    padding: 0 !important;
}

%base-nested-ordered {
    list-style-type: decimal;

    ol {
        list-style: lower-alpha;

        ol {
            list-style: lower-roman;
        }
    }
}

%base-list-inline {
    @extend %base-list, %base-footer-list, %d-inline-flex, %mb-0;

    li {
        line-height: 1.3;

        &:not(:last-child) {
            margin-right: 1rem;
            padding-right: 1rem;
        }
    }
}

%base-list-inline-border {
    @extend %base-list-inline;

    li:not(:last-child) {
        border-right: solid 0.1rem $white;
    }
}

%base-list-spacing {
    padding: 0 0 0 4rem !important;
}

%base-footer-list {
    a {
        color: $white;
        @include make-transition(color);

        @include hover() {
            //color: $ad-l-secondary;
        }
    }
}

.list {
    &-circle {
        @extend %base-list;
        border: solid $circle-border-width $circle-border-color;
        border-radius: 100%;

        @include media-breakpoint-up(lg) {
            width: $circle-base-width;
            height: $circle-base-height;
        }

        > li {
            @extend %position-absolute;
            z-index: 1;
            top: 0;
            left: 50%;
            height: 50%;
            width: 1rem;
            transform-origin: 0% 100%;

            label {
                cursor: pointer;
                position: absolute;
                top: 0;
                left: 0;
                width: 1rem;
                height: 1rem;
                border-radius: 100%;
                background-color: $circle-border-color-active;
                transform: translate(-50%, -45%);

                @include make-transition(transform);

                @include media-breakpoint-up(md) {
                    @include hover() {
                        transform: translate(-50%, -45%) scale(1.5);
                    }
                }

            }

            input:checked + label {
                transform: translate(-50%, -45%) scale(2);
            }

            &:not(:first-child) {
                label {
                    transform: translate(-55%, -50%) skewY(60deg);

                    @include media-breakpoint-up(md) {
                        @include hover() {
                            transform: translate(-55%, -50%) skewY(60deg) scale(1.5);
                        }
                    }
                }

                input:checked + label {
                    transform: translate(-55%, -50%) skewY(60deg) scale(2);
                }

                &:nth-child(even) {
                    label:after {
                        content: '';
                        position: absolute;
                        top: 0;
                        left: 0;
                        width: .5rem;
                        height: .5rem;
                        border-radius: 100%;
                        background-color: $white;
                        transform: translate(50%, 50%);
                    }
                }

            }

            @for $i from 1 through length($circle-points) {
                &:nth-child(#{$i + 1}) {
                    transform: rotate(nth($circle-points, $i)) skewY(-60deg);
                }
            }
        }
    }
}

list {
    @at-root .nav-#{&} {
        @extend %base-list, %d-flex, %flex-column, %align-items-start;
        pointer-events: none;

        > li {
            pointer-events: all;
            line-height: 1.2;
            font-size: 5rem;
            font-weight: 800;

            @include media-breakpoint-up(md) {
                font-size: 10rem;
            }

            a {
                @extend %position-relative, %d-block;
                color: $ep-dark;

                @include media-breakpoint-up(md) {
                    @include make-transition(margin-left, .2s);
                    @include hover() {
                        margin-left: 2.5rem;
                    }

                    &:after {
                        pointer-events: none;
                        position: absolute;
                        content: '';
                        top: 0;
                        right: 0;
                        width: 110%;
                        height: 100%;
                        background-image: linear-gradient(to right, transparentize($white, 1), transparentize($white, 0));
                        transform: translateX(100%);

                        @include make-transition(transform, .6s);
                    }
                }

            }

        }

        @include media-breakpoint-up(md) {
            @include hover() {
                > li:not(:hover) {
                    a {
                        &:after {
                            transform: none;
                        }
                    }
                }
            }

        }

    }
}